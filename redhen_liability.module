<?php

/**
 * @file
 * Contains redhen_liability.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\redhen_liability\Entity\LiabilityType;

/**
 * Denotes that the liability is not active.
 */
const REDHEN_LIABILITY_INACTIVE = 0;

/**
 * Denotes that the liability is active.
 */
const REDHEN_lIABILITY_ACTIVE = 1;

/**
 * Implements hook_help().
 */
function redhen_liability_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the redhen_liability module.
    case 'help.page.redhen_liability':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Defines the base liability entity and features.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function redhen_liability_theme() {
  $theme = [];
  $theme['redhen_liability'] = [
    'render element' => 'elements',
    'file' => 'redhen_liability.page.inc',
    'template' => 'redhen_liability',
  ];
  $theme['redhen_liability_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'redhen_liability.page.inc',
  ];
  return $theme;
}

/**
 * Return an associative array of liability types to be used as an options list.
 *
 * @return array
 *   Keyed by name with a label value.
 */
function redhen_liability_type_options_list() {
  $options = array();
  foreach (LiabilityType::loadMultiple() as $type) {
    $options[$type->id()] = $type->label();
  }

  return $options;
}

/**
 * Implements hook_tokens().
 */
function redhen_liability_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
  $replacements = array();

  if (($type == 'liability') && isset($data['entity_type']) && ($data['entity_type'] == 'redhen_liability')) {

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'id':
          $replacements[$original] = $data['entity']->id();
          break;
      }
    }

  }

  return $replacements;
}

/**
 * Implements hook_token_info().
 */
function redhen_liability_token_info() {
  $type = array(
    'name' => t('Liability'),
    'description' => t('Tokens related to an individual Liability.'),
    'needs-data' => 'redhen_liability',
  );

  $redhen_liability['id'] = array(
    'name' => t('Liability ID'),
    'description' => t('The unique ID of the Liability.'),
  );

  return array(
    'types' => array('redhen_liability' => $type),
    'tokens' => array('redhen_liability' => $redhen_liability),
  );
}
